---
import { SEO } from 'astro-seo';
import DefaultSEO from '../../seo.config';
import { ViewTransitions } from 'astro:transitions';

import '../styles/globals.css';
import '@fontsource/geist-sans';
import { navItems } from 'src/constants';
import { cn } from '@lib/utils';
import ThemeToggle from '@components/ThemeToggle';

export interface Props {
  title?: string;
  description?: string;
}

const { title = DefaultSEO.title, description = DefaultSEO.description } =
  Astro.props as Props;

// Used to highlight the current page in the navigation bar.
const pathName = `/${Astro.request.url.split('/')[3]}`;
---

<head>
  <script>
    import { navigate } from 'astro:transitions/client';
    import { NavItem, navItems } from 'src/constants';

    const keyRoutes = navItems.reduce((acc, item, idx) => {
      acc.set(idx + 1, item);
      return acc;
    }, new Map<number, NavItem>());

    document.addEventListener('keydown', (e) => {
      // Prevents interfering with browser shortcuts.
      if (e.metaKey || e.ctrlKey) {
        return;
      }

      const navItem = keyRoutes.get(Number(e.key));
      if (navItem) {
        navItem.popOut
          ? window.open(navItem.href, '_blank')
          : navigate(navItem.href);
      }
    });
  </script>

  <script is:inline>
    function toggleTheme(theme) {
      const themeIconPath = document.querySelector('#theme-icon-path');

      if (theme === 'light') {
        localStorage.setItem('theme', 'light');
        document.documentElement.classList.remove('dark');
        themeIconPath?.setAttribute(
          'd',
          'M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z',
        );
      } else {
        localStorage.setItem('theme', 'dark');
        document.documentElement.classList.add('dark');
        themeIconPath?.setAttribute(
          'd',
          'M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z',
        );
      }
    }

    const theme = localStorage.theme;
    if (theme) {
      toggleTheme(theme);
    } else {
      const prefersDark = window.matchMedia(
        '(prefers-color-scheme: dark)',
      ).matches;
      toggleTheme(prefersDark ? 'dark' : 'light');
    }
  </script>
  <meta charset='UTF-8' /><meta
    name='viewport'
    content='width=device-width'
  /><link rel='icon' type='image/x-icon' href='/favicon.ico' /><meta
    name='generator'
    content={Astro.generator}
  />
  <ViewTransitions />
</head>

<SEO title={title} description={description} />

<div
  class='flex min-h-screen dark:bg-zinc-950 dark:text-gray-100 selection:bg-zinc-950 selection:text-white dark:selection:bg-zinc-800'
>
  <div
    class='fixed h-full text-zinc-700 bg-zinc-100 w-72 p-4 dark:bg-zinc-900/75 dark:text-zinc-200'
  >
    <div class='flex justify-between items-center font-bold uppercase mb-4'>
      <!-- TODO: Add logo here -->
      <span>David Neuman</span>
      <ThemeToggle client:only='react' />
    </div>
    <div class='flex flex-col space-y-2'>
      {
        navItems.map(({ href, name, popOut, Icon }, idx) => (
          <a target={popOut ? '_blank' : '_self'} href={href}>
            <div
              class={cn(
                'cursor-pointer p-2 rounded hover:bg-zinc-200/80 hover:shadow dark:hover:bg-zinc-800/80',
                pathName === href && 'bg-white shadow dark:bg-zinc-800/75',
              )}
            >
              <div class='flex justify-between'>
                <div class='flex gap-2 items-center'>
                  <Icon className='w-4 h-4' />
                  <span>{name}</span>
                </div>
                <span class='flex items-center justify-center text-xs h-4 w-4 p-2.5 text-zinc-400 bg-zinc-300/30 dark:bg-zinc-700'>
                  {idx + 1}
                </span>
              </div>
            </div>
          </a>
        ))
      }
    </div>
  </div>
  <div class='ml-72 flex flex-col flex-1 justify-center'>
    <slot />
  </div>
</div>
